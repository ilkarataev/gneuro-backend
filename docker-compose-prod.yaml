

networks:
  payment-network:
    driver: bridge

volumes:
  mysql_data:
    name: mysql_data

services:
  mysql:
    platform: linux/amd64
    container_name: api-backend-mysql
    image: 'mysql:8.0'
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - './docker/mysql/conf.d:/etc/mysql/conf.d'
      - 'mysql_data:/var/lib/mysql'
    ports: ['${IFACE}:${MYSQL_PORT_OUT}:3306']
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      # MYSQL_USER: ${DATABASE_USERNAME}
      # MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: mysqladmin ping -h localhost -u root -p${DATABASE_PASSWORD}
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - payment-network
    deploy:
      resources:
        limits:
          memory: 512M

  phpmyadmin:
    platform: linux/amd64
    container_name: api-backend-pma
    image: 'phpmyadmin/phpmyadmin:latest'
    restart: always
    ports: ['${IFACE}:${PHP_ADMIN_PORT}:80']
    environment:
      PMA_HOST: 'mysql'
      PMA_USER: ${DATABASE_USERNAME}
      PMA_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      - payment-network
    depends_on:
      mysql:
        condition: service_healthy

  migrations:
    container_name: api-backend-migrations
    build:
      context: ./
      dockerfile: './docker/node/Dockerfile'
    entrypoint: 'npm run migrate'
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
    env_file:
      - .env
    networks:
      - payment-network
    depends_on:
      mysql:
        condition: service_healthy
  
  backend:
    container_name: api-backend
    build:
      context: ./
      dockerfile: './docker/node/Dockerfile'
    ports: ['${IFACE}:3001:3001']
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
    networks:
      - payment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 256M

  cron-backup:
    container_name: api-backend-cron-backup
    build:
      context: .
      dockerfile: './docker/cron/Dockerfile'
    environment:
      DATABASE_HOST: mysql
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
    networks:
      - payment-network
    depends_on:
      mysql:
        condition: service_healthy