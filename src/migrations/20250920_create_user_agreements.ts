import { QueryInterface, DataTypes } from 'sequelize';

export const up = async (queryInterface: QueryInterface): Promise<void> => {
  console.log('üîÑ [MIGRATION] –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user_agreements...');
  
  await queryInterface.createTable('user_agreements', {
    id: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    user_id: {
      type: DataTypes.INTEGER,
      allowNull: false,
      references: {
        model: 'users',
        key: 'id'
      },
      onUpdate: 'CASCADE',
      onDelete: 'CASCADE'
    },
    agreement_type: {
      type: DataTypes.STRING(50),
      allowNull: false,
      comment: '–¢–∏–ø —Å–æ–≥–ª–∞—à–µ–Ω–∏—è: safety_rules, terms_of_service, privacy_policy'
    },
    version: {
      type: DataTypes.STRING(20),
      allowNull: false,
      comment: '–í–µ—Ä—Å–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è'
    },
    agreed_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: DataTypes.NOW
    },
    ip_address: {
      type: DataTypes.STRING(45),
      allowNull: true,
      comment: 'IP –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ–≥–ª–∞—Å–∏–∏'
    },
    user_agent: {
      type: DataTypes.TEXT,
      allowNull: true,
      comment: 'User Agent –±—Ä–∞—É–∑–µ—Ä–∞'
    },
    created_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: DataTypes.NOW
    },
    updated_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: DataTypes.NOW
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
  await queryInterface.addIndex('user_agreements', ['user_id', 'agreement_type'], {
    name: 'idx_user_agreements_user_type',
    unique: true
  });

  await queryInterface.addIndex('user_agreements', ['agreement_type']);
  await queryInterface.addIndex('user_agreements', ['agreed_at']);

  console.log('‚úÖ [MIGRATION] –¢–∞–±–ª–∏—Ü–∞ user_agreements —Å–æ–∑–¥–∞–Ω–∞');
};

export const down = async (queryInterface: QueryInterface): Promise<void> => {
  console.log('üîÑ [MIGRATION] –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_agreements...');
  await queryInterface.dropTable('user_agreements');
  console.log('‚úÖ [MIGRATION] –¢–∞–±–ª–∏—Ü–∞ user_agreements —É–¥–∞–ª–µ–Ω–∞');
};
