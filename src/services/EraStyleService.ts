import axios from 'axios';
import sharp from 'sharp';
import fs from 'fs';
import path from 'path';
import { GoogleGenAI } from '@google/genai';
import { Photo, ApiRequest, User } from '../models/index';
import { BalanceService } from './BalanceService';
import { PriceService } from './PriceService';
import { FileManagerService } from './FileManagerService';

export interface EraStyleRequest {
  userId: number;
  telegramId: number;
  imageUrl: string;
  eraId: string;
  prompt: string;
  originalFilename: string;
}

export interface EraStyleResult {
  success: boolean;
  styledUrl?: string;
  cost?: number;
  eraId?: string;
  originalFilename?: string;
  error?: string;
}

export class EraStyleService {
  private static readonly GEMINI_API_KEY = process.env.GEMINI_API_KEY || 'test_key';
  
  // –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —ç–ø–æ—Ö–∏ —Å –∏—Ö –ø—Ä–æ–º–ø—Ç–∞–º–∏
  private static readonly ERA_PROMPTS = {
    'russia_early_20': 'Redesign the uploaded image in the style of early 20th-century Russia: Art Nouveau influences, ornate wooden furniture, samovar on table, lace curtains, soft gas lamp lighting, imperial colors like deep red and gold, realistic historical accuracy, preserve original layout and main elements.',
    'russia_19': 'Transform the uploaded photo to 19th-century Russian style: neoclassical architecture for rooms, elaborate ball gowns or military uniforms, candlelit ambiance, heavy velvet drapes, earthy tones with accents of emerald, detailed textures like brocade, keep the core subject intact in a romantic era setting.',
    'soviet': 'Edit the uploaded image into Soviet Union era style (1950s-1980s): functional communist design, wooden bookshelves with propaganda posters, simple upholstered furniture, warm bulb lighting, muted colors like beige and gray with red accents, realistic socialist realism vibe, maintain original composition.',
    'nineties': 'Style the uploaded photo as 1990s aesthetic: grunge or minimalist vibe, bulky furniture like IKEA-inspired, neon posters or MTV influences, baggy clothes with plaid patterns, fluorescent lighting, vibrant yet faded colors like acid wash denim, high detail on retro textures, preserve the subject\'s pose and key features.'
  };

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏
   */
  static async getEraStyleCost(): Promise<number> {
    return await PriceService.getServicePrice('era_style');
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —ç–ø–æ—Ö–∏
   */
  static getEraPrompt(eraId: string): string {
    return this.ERA_PROMPTS[eraId as keyof typeof this.ERA_PROMPTS] || '';
  }

  /**
   * –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —ç–ø–æ—Ö—É
   */
  static isValidEra(eraId: string): boolean {
    return Object.keys(this.ERA_PROMPTS).includes(eraId);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–ø–æ—Ö
   */
  static getAvailableEras() {
    return [
      {
        id: 'russia_early_20',
        name: '–†–æ—Å—Å–∏—è –Ω–∞—á–∞–ª–∞ 20-–≥–æ –≤–µ–∫–∞',
        icon: 'üèõÔ∏è',
        description: '–°—Ç–∏–ª—å –º–æ–¥–µ—Ä–Ω–∞ –∏ –°–µ—Ä–µ–±—Ä—è–Ω–æ–≥–æ –≤–µ–∫–∞'
      },
      {
        id: 'russia_19',
        name: '–†–æ—Å—Å–∏—è 19 –≤–µ–∫',
        icon: 'üëë',
        description: '–≠–ø–æ—Ö–∞ –∫–ª–∞—Å—Å–∏—Ü–∏–∑–º–∞ –∏ —Ä–æ–º–∞–Ω—Ç–∏–∑–º–∞'
      },
      {
        id: 'soviet',
        name: '–°–æ–≤–µ—Ç—Å–∫–∏–π –°–æ—é–∑',
        icon: 'üö©',
        description: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –°–°–°–† 1950-1980'
      },
      {
        id: 'nineties',
        name: '90-–µ',
        icon: 'üìº',
        description: '–≠—Å—Ç–µ—Ç–∏–∫–∞ –¥–µ–≤—è–Ω–æ—Å—Ç—ã—Ö –∏ –ø–æ—Å—Ç—Å–æ–≤–µ—Ç—Å–∫–æ–µ –≤—Ä–µ–º—è'
      }
    ];
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏
   */
  static async stylePhotoByEra(request: EraStyleRequest): Promise<EraStyleResult> {
    try {
      console.log('üèõÔ∏è [ERA_STYLE] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏');
      console.log('üèõÔ∏è [ERA_STYLE] userId:', request.userId);
      console.log('üèõÔ∏è [ERA_STYLE] telegramId:', request.telegramId);
      console.log('üèõÔ∏è [ERA_STYLE] eraId:', request.eraId);
      console.log('üèõÔ∏è [ERA_STYLE] originalFilename:', request.originalFilename);

      // –í–∞–ª–∏–¥–∞—Ü–∏—è —ç–ø–æ—Ö–∏
      if (!this.isValidEra(request.eraId)) {
        console.log('‚ùå [ERA_STYLE] –ù–µ–≤–µ—Ä–Ω–∞—è —ç–ø–æ—Ö–∞:', request.eraId);
        return {
          success: false,
          error: '–ù–µ–≤–µ—Ä–Ω–∞—è —ç–ø–æ—Ö–∞'
        };
      }

      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ –ë–î
      const stylizationCost = await this.getEraStyleCost();
      console.log('üí∞ [ERA_STYLE] –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏:', stylizationCost);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('üí∞ [ERA_STYLE] –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      const currentBalance = await BalanceService.getBalance(request.telegramId);
      console.log('üí∞ [ERA_STYLE] –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:', currentBalance);
      
      if (currentBalance < stylizationCost) {
        console.log('‚ùå [ERA_STYLE] –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤');
        return {
          success: false,
          error: `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –¢—Ä–µ–±—É–µ—Ç—Å—è: ${stylizationCost} ‚ÇΩ`
        };
      }

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const apiRequest = await ApiRequest.create({
        user_id: request.userId,
        api_name: 'era_style',
        request_type: 'era_style',
        request_data: JSON.stringify({
          eraId: request.eraId,
          originalFilename: request.originalFilename,
          imageUrl: request.imageUrl,
          prompt: request.prompt
        }),
        prompt: request.prompt,
        cost: stylizationCost,
        status: 'pending'
      });

      console.log('üí≥ [ERA_STYLE] –°–æ–∑–¥–∞–Ω –∑–∞–ø—Ä–æ—Å API —Å ID:', apiRequest.id);
      
      // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('üí∞ [ERA_STYLE] –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–∞...');
      const balanceResult = await BalanceService.debit(request.userId, stylizationCost, `–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏: ${request.eraId}`);

      if (!balanceResult.success) {
        console.log('‚ùå [ERA_STYLE] –û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤');
        await apiRequest.update({ status: 'failed', error_message: balanceResult.error });
        return {
          success: false,
          error: balanceResult.error || '–û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤'
        };
      }

      console.log('‚úÖ [ERA_STYLE] –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã, –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', balanceResult.balance);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "processing"
      await apiRequest.update({ status: 'processing' });

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const processingResult = await this.processEraStyleImage(
        request.imageUrl,
        request.prompt,
        request.telegramId,
        request.eraId,
        request.originalFilename
      );

      if (!processingResult.success) {
        console.log('‚ùå [ERA_STYLE] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', processingResult.error);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await BalanceService.credit(request.userId, stylizationCost, `–í–æ–∑–≤—Ä–∞—Ç –∑–∞ –æ—à–∏–±–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏: ${request.eraId}`);

        await apiRequest.update({ 
          status: 'failed', 
          error_message: processingResult.error 
        });

        return {
          success: false,
          error: processingResult.error
        };
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
      await apiRequest.update({
        status: 'completed',
        response_data: JSON.stringify({
          styledUrl: processingResult.styledUrl,
          eraId: request.eraId
        }),
        completed_date: new Date()
      });

      console.log('‚úÖ [ERA_STYLE] –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');

      return {
        success: true,
        styledUrl: processingResult.styledUrl,
        cost: stylizationCost,
        eraId: request.eraId,
        originalFilename: request.originalFilename
      };

    } catch (error) {
      console.error('üí• [ERA_STYLE] –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      return {
        success: false,
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
      };
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —ç–ø–æ—Ö–∏
   */
  private static async processEraStyleImage(
    imageUrl: string,
    prompt: string,
    telegramId: number,
    eraId: string,
    originalFilename: string
  ): Promise<{ success: boolean; styledUrl?: string; error?: string }> {
    try {
      console.log('üé® [ERA_STYLE] –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
      console.log('üé® [ERA_STYLE] prompt –¥–ª–∏–Ω–∞:', prompt.length);

      // –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const imagePath = path.resolve(imageUrl);
      console.log('üìÅ [ERA_STYLE] –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', imagePath);

      if (!fs.existsSync(imagePath)) {
        return {
          success: false,
          error: '–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω'
        };
      }

      const imageBuffer = fs.readFileSync(imagePath);
      console.log('üìä [ERA_STYLE] –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imageBuffer.length, '–±–∞–π—Ç');

      // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const metadata = await sharp(imageBuffer).metadata();
      console.log('üìä [ERA_STYLE] –†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', metadata.width, 'x', metadata.height);

      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ API
      let processedBuffer = imageBuffer;
      
      // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–µ, —É–º–µ–Ω—å—à–∞–µ–º –µ–≥–æ
      if (metadata.width && metadata.height && (metadata.width > 1024 || metadata.height > 1024)) {
        console.log('üîÑ [ERA_STYLE] –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
        const resizedBuffer = await sharp(imageBuffer)
          .resize(1024, 1024, { fit: 'inside', withoutEnlargement: false })
          .jpeg({ quality: 85 })
          .toBuffer();
        processedBuffer = Buffer.from(resizedBuffer);
        console.log('üîÑ [ERA_STYLE] –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞:', processedBuffer.length, '–±–∞–π—Ç');
      }

      // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ AI API (Gemini, OpenAI, –∏–ª–∏ –¥—Ä—É–≥–æ–º—É)
      // –ü–æ–∫–∞ –¥–µ–ª–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
      console.log('ü§ñ [ERA_STYLE] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ AI API...');
      
      // TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º AI API –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
      // –ü–æ–∫–∞ –∫–æ–ø–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const processedDir = FileManagerService.createProcessedDirectory(telegramId, 'era-style');
      const outputFilename = `styled_${eraId}_${Date.now()}_${originalFilename}`;
      const outputPath = path.join(processedDir, outputFilename);

      // –ö–æ–ø–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      fs.writeFileSync(outputPath, processedBuffer);
      console.log('üíæ [ERA_STYLE] –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', outputPath);

      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      const styledUrl = FileManagerService.createFileUrl(
        telegramId,
        'era-style',
        outputFilename,
        'processed'
      );

      console.log('üåê [ERA_STYLE] URL —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', styledUrl);

      return {
        success: true,
        styledUrl: styledUrl
      };

    } catch (error) {
      console.error('üí• [ERA_STYLE] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      return {
        success: false,
        error: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
      };
    }
  }
}
