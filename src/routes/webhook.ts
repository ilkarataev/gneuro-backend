import express from 'express';
import { User } from '../models/index';
import { BalanceService } from '../services/BalanceService';

const router = express.Router();

/**
 * –í–µ–±-—Ö—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è leadtech ID
 * POST /api/webhook/leadtech
 * 
 * –û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:
 * {
 *   "telegram_id": 123456789,
 *   "leadtech_contact_id": 987654321
 * }
 */
router.post('/leadtech', async (req, res) => {
  console.log('üìû –ü–æ–ª—É—á–µ–Ω –≤–µ–±-—Ö—É–∫ leadtech:', JSON.stringify(req.body, null, 2));
  
  try {
    // –í –≤–µ–±-—Ö—É–∫–µ leadtech –ø–æ–ª–µ id —è–≤–ª—è–µ—Ç—Å—è leadtech_contact_id
    const { 
      telegram_id, 
      id: leadtech_contact_id, 
      name, 
      telegram_username,
      email 
    } = req.body;
    
    console.log(`üìã –ò–∑–≤–ª–µ—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: telegram_id=${telegram_id}, leadtech_contact_id=${leadtech_contact_id}`);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!telegram_id) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram_id');
      return res.status(400).json({
        success: false,
        error: 'telegram_id –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      });
    }

    if (!leadtech_contact_id) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç leadtech_contact_id (id –≤ –∑–∞–ø—Ä–æ—Å–µ)');
      return res.status(400).json({
        success: false,
        error: 'leadtech_contact_id (id) –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏
    const telegramIdNum = Number(telegram_id);
    const leadtechIdNum = Number(leadtech_contact_id);

    if (isNaN(telegramIdNum) || isNaN(leadtechIdNum)) {
      console.log('‚ùå telegram_id –∏–ª–∏ leadtech_contact_id –Ω–µ —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏');
      return res.status(400).json({
        success: false,
        error: 'telegram_id –∏ leadtech_contact_id –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏'
      });
    }

    console.log(`üîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id: ${telegramIdNum}`);

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id
    let user = await User.findOne({
      where: { telegram_id: telegramIdNum }
    });

    if (!user) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id ${telegramIdNum} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ...`);
      
      // –ü–∞—Ä—Å–∏–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–æ–ª—è name
      const nameParts = (name || '').trim().split(' ');
      const firstName = nameParts[0] || null;
      const lastName = nameParts.slice(1).join(' ') || null;
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –≤–µ–±—Ö—É–∫–∞
      user = await BalanceService.createUser({
        id: telegramIdNum,
        username: telegram_username || null,
        firstName: firstName,
        lastName: lastName
      });
      
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID=${user!.id}, username=${user!.username}, name=${firstName} ${lastName}`);
    } else {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ID=${user.id}, username=${user.username}`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º leadtech_contact_id (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ)
    await user!.update({
      leadtech_contact_id: leadtechIdNum
    });

    console.log(`‚úÖ leadtech_contact_id —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${leadtechIdNum} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user!.id}`);

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –±–∞–ª–∞–Ω—Å–∞ —Å LeadTech
    console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –±–∞–ª–∞–Ω—Å–∞ —Å LeadTech...');
    try {
      const syncResult = await BalanceService.syncWithLeadTech(telegramIdNum);
      if (syncResult.success) {
        console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${syncResult.localBalance}, LeadTech –±–∞–ª–∞–Ω—Å: ${syncResult.leadTechBalance}`);
      } else {
        console.log(`‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º: ${syncResult.error}`);
      }
    } catch (syncError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', syncError);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ ID) –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
    }

    res.json({
      success: true,
      message: 'leadtech_contact_id —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –±–∞–ª–∞–Ω—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω',
      data: {
        user_id: user!.id,
        telegram_id: telegramIdNum,
        leadtech_contact_id: leadtechIdNum,
        username: user!.username
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±-—Ö—É–∫–∞ leadtech:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

/**
 * –ü–æ–ª—É—á–∏—Ç—å leadtech ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram ID
 * GET /api/webhook/leadtech/:telegram_id
 */
router.get('/leadtech/:telegram_id', async (req, res) => {
  try {
    const telegramId = Number(req.params.telegram_id);

    if (isNaN(telegramId)) {
      return res.status(400).json({
        success: false,
        error: 'telegram_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º'
      });
    }

    const user = await User.findOne({
      where: { telegram_id: telegramId },
      attributes: ['id', 'telegram_id', 'username', 'leadtech_contact_id']
    });

    if (!user) {
      return res.status(404).json({
        success: false,
        error: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`
      });
    }

    res.json({
      success: true,
      data: {
        user_id: user.id,
        telegram_id: user.telegram_id,
        username: user.username,
        leadtech_contact_id: user.leadtech_contact_id
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ leadtech ID:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

export default router;